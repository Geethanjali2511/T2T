{"ast":null,"code":"var _jsxFileName = \"C:\\\\rach\\\\Front-End-2\\\\TBlogVS\\\\src\\\\components\\\\AllPosts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { Row, Col } from 'react-bootstrap';\nimport PostForm from './PostForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllPosts = () => {\n  _s();\n\n  const [post, setPost] = useState([]);\n\n  function getAllPosts() {\n    axios.get(\"http://localhost:8080/post\").then(response => {\n      console.log(response);\n      setPost(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n  let postList = post.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, post.post_id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this));\n\n  const addNewPost = post => {\n    axios.post(\"http://localhost:8080/post\", post).then(response => {\n      getAllPosts();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" AllPosts: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: postList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(PostForm, {\n          submitForm: addNewPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AllPosts, \"OTqVfaccSrZ2o8u1iZie8TEDImg=\");\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["React","useEffect","useState","Post","Row","Col","PostForm","axios","AllPosts","post","setPost","getAllPosts","get","then","response","console","log","data","catch","error","postList","map","post_id","addNewPost"],"sources":["C:/rach/Front-End-2/TBlogVS/src/components/AllPosts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Post from './Post'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport PostForm from './PostForm'\r\nimport axios from 'axios';\r\n\r\n\r\nconst AllPosts = () => {\r\n\r\n    const [post, setPost] =useState([]);\r\n\r\n    function getAllPosts(){\r\n      axios.get(\"http://localhost:8080/post\")\r\n      .then(response =>{\r\n        console.log(response);\r\n        setPost(response.data);\r\n      })\r\n      .catch(error =>{\r\n        console.log(error);\r\n      })\r\n    }\r\n\r\n    useEffect(() =>{\r\n      getAllPosts()\r\n    }, [])\r\n    \r\n\r\n    \r\n    let postList = post.map(post =>\r\n      <div key={post.post_id}>\r\n        <Post post={post} />\r\n      </div>)\r\n\r\n    const addNewPost = (post) => {\r\n       axios.post(\"http://localhost:8080/post\",post)\r\n       .then (response =>{\r\n          getAllPosts();\r\n       })\r\n       .catch(error=>{\r\n        console.log(error);\r\n       })\r\n\r\n  }\r\n\r\n  return (\r\n      <><h1> AllPosts: </h1><Row>\r\n      <Col>{postList}</Col>\r\n      <Col><PostForm submitForm={addNewPost} /></Col>\r\n    </Row></>\r\n    \r\n  )\r\n}\r\n\r\nexport default AllPosts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAEnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;;EAEA,SAASS,WAAT,GAAsB;IACpBJ,KAAK,CAACK,GAAN,CAAU,4BAAV,EACCC,IADD,CACMC,QAAQ,IAAG;MACfC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACAJ,OAAO,CAACI,QAAQ,CAACG,IAAV,CAAP;IACD,CAJD,EAKCC,KALD,CAKOC,KAAK,IAAG;MACbJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACD,CAPD;EAQD;;EAEDlB,SAAS,CAAC,MAAK;IACbU,WAAW;EACZ,CAFQ,EAEN,EAFM,CAAT;EAMA,IAAIS,QAAQ,GAAGX,IAAI,CAACY,GAAL,CAASZ,IAAI,iBAC1B;IAAA,uBACE,QAAC,IAAD;MAAM,IAAI,EAAEA;IAAZ;MAAA;MAAA;MAAA;IAAA;EADF,GAAUA,IAAI,CAACa,OAAf;IAAA;IAAA;IAAA;EAAA,QADa,CAAf;;EAKA,MAAMC,UAAU,GAAId,IAAD,IAAU;IAC1BF,KAAK,CAACE,IAAN,CAAW,4BAAX,EAAwCA,IAAxC,EACCI,IADD,CACOC,QAAQ,IAAG;MACfH,WAAW;IACb,CAHD,EAICO,KAJD,CAIOC,KAAK,IAAE;MACbJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACA,CAND;EAQJ,CATC;;EAWF,oBACI;IAAA,wBAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAF,eAAsB,QAAC,GAAD;MAAA,wBACtB,QAAC,GAAD;QAAA,UAAMC;MAAN;QAAA;QAAA;QAAA;MAAA,QADsB,eAEtB,QAAC,GAAD;QAAA,uBAAK,QAAC,QAAD;UAAU,UAAU,EAAEG;QAAtB;UAAA;UAAA;UAAA;QAAA;MAAL;QAAA;QAAA;QAAA;MAAA,QAFsB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAtB;EAAA,gBADJ;AAOD,CA5CD;;GAAMf,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}